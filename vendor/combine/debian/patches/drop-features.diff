Index: combine/Cargo.toml
===================================================================
--- combine.orig/Cargo.toml
+++ combine/Cargo.toml
@@ -91,11 +91,6 @@ required-features = ["mp4"]
 version = "1"
 optional = true
 
-[dependencies.bytes_05]
-version = "0.5"
-optional = true
-package = "bytes"
-
 [dependencies.futures-core-03]
 version = "0.3.1"
 optional = true
@@ -120,19 +115,6 @@ optional = true
 version = "1"
 optional = true
 
-[dependencies.tokio-02-dep]
-version = "0.2.3"
-features = ["io-util"]
-optional = true
-default-features = false
-package = "tokio"
-
-[dependencies.tokio-03-dep]
-version = "0.3"
-optional = true
-default-features = false
-package = "tokio"
-
 [dependencies.tokio-dep]
 version = "1"
 optional = true
@@ -151,10 +133,6 @@ version = "1"
 [dev-dependencies.bytes]
 version = "1"
 
-[dev-dependencies.bytes_05]
-version = "0.5"
-package = "bytes"
-
 [dev-dependencies.criterion]
 version = "0.3"
 default-features = false
@@ -179,25 +157,6 @@ version = "1.0"
 [dev-dependencies.quickcheck]
 version = "0.6"
 
-[dev-dependencies.tokio-02-dep]
-version = "0.2"
-features = [
-    "fs",
-    "io-driver",
-    "io-util",
-    "macros",
-]
-package = "tokio"
-
-[dev-dependencies.tokio-03-dep]
-version = "0.3"
-features = [
-    "fs",
-    "macros",
-    "rt-multi-thread",
-]
-package = "tokio"
-
 [dev-dependencies.tokio-dep]
 version = "1"
 features = [
@@ -232,18 +191,4 @@ tokio = [
     "futures-core-03",
     "pin-project-lite",
 ]
-tokio-02 = [
-    "pin-project",
-    "std",
-    "tokio-02-dep",
-    "futures-core-03",
-    "pin-project-lite",
-    "bytes_05",
-]
-tokio-03 = [
-    "pin-project",
-    "std",
-    "tokio-03-dep",
-    "futures-core-03",
-    "pin-project-lite",
-]
+
Index: combine/tests/support/mod.rs
===================================================================
--- combine.orig/tests/support/mod.rs
+++ combine/tests/support/mod.rs
@@ -30,7 +30,7 @@ where
     }
 }
 
-impl<R> tokio_02_dep::io::AsyncRead for PartialAsyncRead<R>
+/*impl<R> tokio_02_dep::io::AsyncRead for PartialAsyncRead<R>
 where
     R: tokio_02_dep::io::AsyncRead + Unpin,
 {
@@ -95,7 +95,7 @@ where
             Some(PartialOp::Unlimited) | None => Pin::new(&mut self.inner).poll_read(cx, buf),
         }
     }
-}
+}*/
 
 impl<R> tokio_dep::io::AsyncRead for PartialAsyncRead<R>
 where
